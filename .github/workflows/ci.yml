name: 🏆 BTK Yarışması 2025 - Trivox CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: 🧪 Run basic tests
      run: |
        python -c "import fastapi; print('✅ FastAPI import successful')"
        python -c "import selenium; print('✅ Selenium import successful')"
        python -c "from main import app; print('✅ Main app import successful')"

    - name: 🔍 Check code quality
      run: |
        python -m py_compile main.py
        python -m py_compile analyzer/*.py
        python -m py_compile scraper/*.py
        python -m py_compile utils/*.py

  docker:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🐋 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: 🏗️ Build Docker image
      run: |
        echo "FROM python:3.11-slim
        WORKDIR /app
        COPY requirements.txt .
        RUN pip install -r requirements.txt
        COPY . .
        EXPOSE 8000
        CMD [\"python\", \"main.py\"]" > Dockerfile
        
        docker build -t btk-urun-analiz:latest .

    - name: 🧪 Test Docker image
      run: |
        docker run --rm btk-urun-analiz:latest python -c "print('🎉 BTK Yarışması 2025 - Trivox Docker test successful!')"

  security:
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔒 Run security scan
      run: |
        python -m pip install safety bandit
        # safety check --json || true
        bandit -r . -f json || true

  notify:
    runs-on: ubuntu-latest
    needs: [test, docker, security]
    if: always()
    
    steps:
    - name: 📢 Notify Trivox Team
      run: |
        echo "🏆 BTK Yarışması 2025 CI/CD Tamamlandı!"
        echo "👥 Trivox Takımı:"
        echo "  - Serhatcan Ünal (Proje Lideri & Backend)"
        echo "  - Elif Zeynep Tosun (AI Uzmanı & Frontend)"  
        echo "  - Meryem Gençali (Web Scraping & UI/UX)"
        echo "✅ Test Durumu: ${{ needs.test.result }}"
        echo "🐋 Docker Durumu: ${{ needs.docker.result }}"
        echo "🔒 Security Durumu: ${{ needs.security.result }}"
